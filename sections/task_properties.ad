

[[task_properties,properties]]
=== properties ===

This task essentially allows one to move the contents of a Ant property file footnote:[see http://ant.apache.org/manual/Tasks/property.html] into a build file. 

-------------------------------------
<c:properties>
  ; this is a comment
  
  ; regular properties
  p0 = hello
  p1 : ${p0}, \
       world!
  
  ; EL references enabled by default
  p2 = hello, #{ 'world' }!
</c:properties>
-------------------------------------

This task is quite similar to <<tasks_let,let>>. The major difference is that this task is about creating properties in the spirit of Ant while <<tasks_let,let>> on the other side, supports in addition the creation of variables, overriding and deleting of properties. 

==== Attributes ====

// cols=5
[cols="15%,10%,15%,60%"]
|===========================
| Attribute | Type    | Default | Description 
| `debug`     | boolean | `false` | Turn extra debug information on 
| `comment`   | string  | `;`     | The character that starts a comment line 
|===========================

==== Elements ====

This task accepts a implicit text element.

==== Behaviour ====

The format to define properties within a this task is a subset of the format supported by Ant. Consider:

* The first non-whitespace character of a comment is by default `;` while a Ant property files use `#` and `!`. The comment character can be changed using attribute `comment`.
* Ant comment lines do not support continuation lines, this task does.
* This task requires that either `=` or `:` separates the key from it\'s value. 
* Leading and trailing (!) whitespace characters are ignored. This is different from standard Ant where trailing whitespace is significant footnote:[.. and responsible for unexpected and hard to track script behaviour].
*  EL-references `#{..}` are resolved regardless of whether EL has been enabled or not.




