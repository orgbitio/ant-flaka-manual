
[[task_for,for]]
== for == 

A task that implements a loop statement. Iterating over a list of _objects_:

{{{
 <c:for var="x" in=" list('a', 2, 'src'.tofile, typeof(list())) ">
   <c:echo>
      #{x}
   </c:echo>
 </c:for>
}}}

=== Attributes ===

|| Attribute || Type   || Default || EL    || Description ||
|| `var`     || string ||         || #{}   || The variable holding each loop item. This variable can be referenced within the body like `#{var}` where `var` is the string used in this attribute. If not used, then no iteration takes place and no warning is issued. Notice that you can use `#{..}` only in [EL] enabled tasks. ||
|| `in`      || string ||         || expr  || The items to be iterated over as [EL] expression. A iteration takes place except if `null` is the evaluation result. Otherwise, if the evaluation result is _not iterable object_, a temporary list containg that object is created on the fly. Iteration takes then place over that list and otherwise over the iterable collection. ||

=== Elements ===

 The body of this task may contain an arbitrary number of tasks or macros.

=== Behaviour ===

This is the shortest possible for statement. It's legal albeit completely useless.
{{{
 <c:for />
}}}

//TODO: document behaviour

=== Further Links ===
 * [http://javadoc.haefelingerit.net/net.haefelingerit.flaka/1.00/net/haefelingerit/flaka/For.html Javadoc] 
 * [http://code.google.com/p/flaka/source/browse/trunk/src/net/haefelingerit/flaka/For.java Source]
 * Task [Tasks#for for] 
 * Task [Tasks#break break]
 * Task [Tasks#continue continue]
 * Quickref [BasicScriptingConstructs#Looping Looping] for an introduction to looping in Flaka

