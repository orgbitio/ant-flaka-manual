[id="installation"]
//== Installation ==

Download footnote::[see either http://download.haefelinger.it/flaka or use http://code.google.com/p/flaka/downloads] latest version of Flaka and _drop_ `ant-flaka.x.y.z.jar` into your local Ant installation. All that needs to be done is to put this jar into Java\'s classpath when running Ant. There are various techniques how to do so. Please read-on what exactly needs to be done.

=== Ready, .. ===

The following *requirements* must be satisfied before you start:

* Flaka requires Java 1.5 or newer footnote:[http://java.sun.com/javase/downloads] or newer. You can change the version by setting environment variable `JAVA_HOME`. Have also a look at Ant\'s manual footnote:[http://ant.apache.org/manual] for other environment variables to utilize.
* Ant, version 1.7.0 or newer footnote:[http://ant.apache.org]. 


=== Charge, .. ===
The most primitive technique is to save `ant-flaka-x.y.z.jar` into Ant\'s library folder `lib`. If you have no clue where Ant is installed, try 

-------------------------------------

 $ ant -diagnostics | grep ant.home
 ant.home: /opt/ant/1.7.1

-------------------------------------

Saving something in Ant\'s library folder may not work if you lack required permissions. There is also the disadvantage that when switching to another installation of Ant, you need to reinstall Flaka again. Therefore consider to use option `-lib`:

-------------------------------------
 $ ant -lib ant-flaka-x.y.z.jar
-------------------------------------

A pretty nice feature of option `-lib` is, that if the argument is a folder, that folder is scanned for `jar` files. Therefore you may want to do something like this:

-------------------------------------
 $ mkdir $HOME/lib/ant
 $ cp ant-flaka-x.y.z.jar $HOME/lib/ant
 $ ant -lib $HOME/lib/ant
-------------------------------------

This approach has the nice advantage that you simply can drop other jar files into folder `$HOME/lib/ant` to make them reachable  without touching the original Ant installation. As already mentioned, this will get handy when you have multiple Ant installations. Notice that option `-lib` can be applied more than once if your jars reside in various folders. Finally notice, that folders are _not_ recursively scanned.

When working from the command line, it is rather annoying to provide option `-lib` for each and every call. Fortunately, Ant recognizes environment variable `ANT_ARGS` which can be used to let `-lib` disappear:

-------------------------------------
 $ ANT_ARGS="-lib $HOME/lib/ant"
 $ export ANT_ARGS
-------------------------------------

The drawback with this technique is that you need to make sure that this variable is set in every environment you start up Ant. This sounds perhaps easier than actually done. Luckily again, Ant reads file `$HOME/.antrc` and `$HOME/.ant/ant.conf` on each and every start-up. It is therefore recommended to set variable `ANT_ARGS` in one of this files footnote:[when doing so, you don't need to _export_ that variable]to make just every plain call to `ant` is aware of Flaka. For example:

-------------------------------------
 $ cat $HOME/.antrc
 ANT_ARGS="-lib $HOME/lib/ant"
-------------------------------------

Finally it should be mentioned, that Ant scans for additional jars in folder `$HOME/.ant/lib`. Thus the following two invocations of Ant are identical
-------------------------------------
 $ ant
 $ ant -lib $HOME/.ant/lib
-------------------------------------

=== Fire! ===

To check whether your setup is proper, create a small build script and try to execute it. For example,try this  

-------------------------------------
$ cat > build.xml << EOF
<project xmlns:c="antlib:it.haefelinger.flaka">
 <c:logo>
  Hello, #{property['ant.file'].tofile.name}
 </c:logo>
</project>
^D
--------------------------------------
Then, when created, try to execute it with your Flaka equipped Ant. You should
see something like
-------------------------------------
$ ant
:::::::::::::::::::::::::::::::::::::::::::::::::::
::               Hello, build.xml                ::
:::::::::::::::::::::::::::::::::::::::::::::::::::
BUILD SUCCESSFUL
[..]
-------------------------------------
if everything is well setup.
